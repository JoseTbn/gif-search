{"version":3,"sources":["Components/SearchForm.js","Components/Gif.js","Components/NoGifs.js","Components/GifList.js","Components/App.js","index.js"],"names":["SearchForm","props","useState","searchText","setsearchText","className","onSubmit","e","preventDefault","onSearch","currentTarget","reset","htmlFor","type","onChange","target","value","name","placeholder","id","Gif","src","url","alt","NoGifs","GifList","gifs","results","data","length","map","gif","images","fixed_height","key","App","setdata","query","setQuery","isLoading","setIsLoading","useEffect","axios","then","response","catch","error","console","log","finally","ReactDOM","render","document","getElementById"],"mappings":"oPA6BeA,MA3Bf,SAAoBC,GAClB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACE,0BAAMC,UAAU,cAAcC,SARX,SAACC,GACpBA,EAAEC,iBAEDP,EAAMQ,SAASN,GAChBI,EAAEG,cAAcC,UAKd,2BAAON,UAAU,YAAYO,QAAQ,UAArC,UACA,2BAAOC,KAAK,SACVC,SAfiB,SAACP,GACtBH,EAAcG,EAAEQ,OAAOC,QAenBC,KAAK,SACLC,YAAY,cAEd,4BAAQL,KAAK,SAASM,GAAG,SAASd,UAAU,iBAAgB,uBAAGA,UAAU,6BAAb,aChBnDe,EANH,SAAAnB,GAAK,OACf,wBAAII,UAAU,YACZ,yBAAKgB,IAAKpB,EAAMqB,IAAKC,IAAI,OCKdC,EAPA,SAAAvB,GAAK,OAClB,wBAAII,UAAU,WACZ,uBAAGA,UAAU,2BAAb,+BACA,mECgBWoB,EAjBC,SAAAxB,GAEd,IACIyB,EADEC,EAAU1B,EAAM2B,KAQtB,OALEF,EADEC,EAAQE,OACHF,EAAQG,KAAI,SAAAC,GAAG,OAAI,kBAAC,EAAD,CAAKT,IAAKS,EAAIC,OAAOC,aAAaX,IAAKY,IAAKH,EAAIZ,QAEnE,kBAAC,EAAD,MAIP,wBAAId,UAAU,YACXqB,ICyBQS,MAlCf,WAEE,MAAwBjC,mBAAS,IAAjC,mBAAO0B,EAAP,KAAaQ,EAAb,KACA,EAA0BlC,mBAAS,SAAnC,mBAAOmC,EAAP,KAAcC,EAAd,KACA,EAAkCpC,oBAAS,GAA3C,mBAAOqC,EAAP,KAAkBC,EAAlB,KAWA,OAPAC,qBAAW,WACTC,IAAM,yCAAD,OAA0CL,EAA1C,uDACJM,MAAK,SAAAC,GAAQ,OAAIR,EAAQQ,EAAShB,KAAKA,SACrCiB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,kCAAmCF,MAC9DG,SAAQ,kBAAMT,GAAa,QAC5B,CAACH,IAGH,oCACE,yBAAKhC,UAAU,eACb,yBAAKA,UAAU,SACb,wBAAIA,UAAU,cAAd,cACA,kBAAC,EAAD,CAAYI,SAdE,SAACO,GAAD,OAAWsB,EAAStB,QAiBtC,yBAAKX,UAAU,gBAEbkC,EACI,yCACA,kBAAC,EAAD,CAASX,KAAMA,OC9B3BsB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.fffbfaec.chunk.js","sourcesContent":["import React , {useState} from 'react';\n\nfunction SearchForm(props) {\n  const [searchText, setsearchText] = useState('')\n\n  const onSearchChange = (e) => { \n    setsearchText(e.target.value)\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n     // pass the search text back to the App component\n     props.onSearch(searchText);\n    e.currentTarget.reset();\n  }\n\n  return (\n    <form className=\"search-form\" onSubmit={handleSubmit}>\n      <label className=\"is-hidden\" htmlFor=\"search\">Search</label>\n      <input type=\"search\"\n        onChange={onSearchChange}\n        name=\"search\"\n        placeholder=\"Search...\"\n      />\n      <button type=\"submit\" id=\"submit\" className=\"search-button\"><i className=\"material-icons icn-search\">search</i></button>\n    </form>\n  );\n}\n\nexport default SearchForm;","import React from 'react';\n\nconst Gif = props => (\n  <li className=\"gif-wrap\">\n    <img src={props.url} alt=\"\"/>\n  </li>\n);\n\nexport default Gif;","import React from 'react';\n\nconst NoGifs = props => (\n  <li className='no-gifs'>\n    <i className=\"material-icons icon-gif\">sentiment_very_dissatisfied</i>\n    <h3>Sorry, no GIFs match your search.</h3>\n  </li>\n);\n\nexport default NoGifs;","import React from 'react';\nimport Gif from './Gif';\nimport NoGifs from './NoGifs';\n\nconst GifList = props => { \n  \n  const results = props.data;\n  let gifs;\n  if (results.length) {\n    gifs = results.map(gif => <Gif url={gif.images.fixed_height.url} key={gif.id} />);    \n  } else {\n    gifs = <NoGifs />\n  }\n\n  return(\n    <ul className=\"gif-list\">\n      {gifs}\n    </ul> \n  );\n}\n\nexport default GifList;\n","import React , { useState, useEffect  } from 'react'\nimport '../App.css';\nimport axios from 'axios';\n\nimport SearchForm from './SearchForm';\nimport GifList from './GifList';\n\nfunction App() {\n  \n  const [data, setdata] = useState([]);\n  const [query, setQuery] = useState('anime');\n  const [isLoading, setIsLoading] = useState(true);\n\n  const performSearch = (value) => setQuery(value)\n\n  useEffect( () => {\n    axios(`http://api.giphy.com/v1/gifs/search?q=${query}&limit=24&api_key=RFLdpkjUGFesFP13u7kk4ANpcQ5DJs2W`)\n    .then(response => setdata(response.data.data))\n      .catch(error => console.log('Error fetching and parsing data', error))\n      .finally(() => setIsLoading(false));\n  },  [query]);\n\n  return (\n    <>\n      <div className=\"main-header\">\n        <div className=\"inner\">\n          <h1 className=\"main-title\">Gif Search</h1>\n          <SearchForm onSearch={performSearch} />\n        </div>\n      </div>\n      <div className=\"main-content\">\n      {\n        isLoading\n          ? <p>Loading...</p>\n          : <GifList data={data} />\n      }\n      </div>\n    </>\n  );\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}